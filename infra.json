{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sourceEmail": {
            "type": "string",
            "defaultValue": "tokubica@microsoft.com",
            "metadata": {
                "description": "Account you will use to authorize office365 connector"
            }
        }
    },
    "variables": {
        "serviceBusName": "[concat('sb-', uniqueString(resourceGroup().id))]",
        "storageName": "[concat('store', uniqueString(resourceGroup().id))]",
        "logicAppStorageName": "[concat('lapp', uniqueString(resourceGroup().id))]",
        "logicAppName": "[concat('lapp', uniqueString(resourceGroup().id))]",
        "registryName": "[concat('registry', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('serviceBusName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "properties": {
                "zoneRedundant": false
            },
            "resources": [
                {
                    "type": "AuthorizationRules",
                    "apiVersion": "2017-04-01",
                    "name": "RootManageSharedAccessKey",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "rights": [
                            "Listen",
                            "Manage",
                            "Send"
                        ]
                    }
                },
                {
                    "type": "AuthorizationRules",
                    "apiVersion": "2017-04-01",
                    "name": "lappListener",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "rights": [
                            "Listen"
                        ]
                    }
                },
                {
                    "type": "queues",
                    "apiVersion": "2017-04-01",
                    "name": "lapp",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName'))]"
                    ],
                    "properties": {
                        "defaultMessageTimeToLive": "P14D"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageName')]",
            "apiVersion": "2020-08-01-preview",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2"
        },
        {
            "name": "demo-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "aci-sub",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [
                                {
                                    "name": "ACIDelegationService",
                                    "properties": {
                                        "serviceName": "Microsoft.ContainerInstance/containerGroups",
                                        "actions": [
                                            "Microsoft.Network/virtualNetworks/subnets/action"
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "func-sub",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "delegations": [
                                {
                                    "name": "AppServiceDelegation",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverFarms",
                                        "actions": [
                                            "Microsoft.Network/virtualNetworks/subnets/action"
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "aks-sub",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkProfiles",
            "name": "sql-server-networkProfile",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks','demo-vnet')]"
            ],
            "properties": {
                "containerNetworkInterfaceConfigurations": [
                    {
                        "name": "eth0",
                        "properties": {
                            "ipConfigurations": [
                                {
                                    "name": "ipconfigprofile1",
                                    "properties": {
                                        "subnet": {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'demo-vnet', 'aci-sub')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "sql-server-private",
            "apiVersion": "2019-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkProfiles', 'sql-server-networkProfile')]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "sql-server",
                        "properties": {
                            "image": "mcr.microsoft.com/mssql/server:2017-latest",
                            "resources": {
                                "requests": {
                                    "cpu": 2,
                                    "memoryInGB": 4
                                }
                            },
                            "environmentVariables": [
                                {
                                    "name": "ACCEPT_EULA",
                                    "value": "Y"
                                },
                                {
                                    "name": "SA_PASSWORD",
                                    "value": "Azure12345678!"
                                }
                            ],
                            "ports": [
                                {
                                    "port": "1433",
                                    "protocol": "TCP"
                                }
                            ]
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux",
                "ipAddress": {
                    "type": "Private",
                    "ports": [
                        {
                            "port": "1433",
                            "protocol": "TCP"
                        }
                    ]
                },
                "networkProfile": {
                    "Id": "[resourceId('Microsoft.Network/networkProfiles', 'sql-server-networkProfile')]"
                }
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "sql-server-public",
            "apiVersion": "2019-12-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "containers": [
                    {
                        "name": "sql-server",
                        "properties": {
                            "image": "mcr.microsoft.com/mssql/server:2017-latest",
                            "resources": {
                                "requests": {
                                    "cpu": 2,
                                    "memoryInGB": 4
                                }
                            },
                            "environmentVariables": [
                                {
                                    "name": "ACCEPT_EULA",
                                    "value": "Y"
                                },
                                {
                                    "name": "SA_PASSWORD",
                                    "value": "Azure12345678!"
                                }
                            ],
                            "ports": [
                                {
                                    "port": "1433",
                                    "protocol": "TCP"
                                }
                            ]
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "port": "1433",
                            "protocol": "TCP"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkProfiles",
            "name": "httpbin-networkProfile",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks','demo-vnet')]"
            ],
            "properties": {
                "containerNetworkInterfaceConfigurations": [
                    {
                        "name": "eth0",
                        "properties": {
                            "ipConfigurations": [
                                {
                                    "name": "ipconfigprofile1",
                                    "properties": {
                                        "subnet": {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'demo-vnet', 'aci-sub')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "httpbin-private",
            "apiVersion": "2019-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkProfiles', 'httpbin-networkProfile')]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "httpbin",
                        "properties": {
                            "image": "kennethreitz/httpbin",
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 1
                                }
                            },
                            "environmentVariables": [],
                            "ports": [
                                {
                                    "port": "80",
                                    "protocol": "TCP"
                                }
                            ]
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux",
                "ipAddress": {
                    "type": "Private",
                    "ports": [
                        {
                            "port": "80",
                            "protocol": "TCP"
                        }
                    ]
                },
                "networkProfile": {
                    "Id": "[resourceId('Microsoft.Network/networkProfiles', 'httpbin-networkProfile')]"
                }
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "httpbin-public",
            "apiVersion": "2019-12-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "containers": [
                    {
                        "name": "httpbin",
                        "properties": {
                            "image": "kennethreitz/httpbin",
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 1
                                }
                            },
                            "environmentVariables": [],
                            "ports": [
                                {
                                    "port": "80",
                                    "protocol": "TCP"
                                }
                            ]
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "port": "80",
                            "protocol": "TCP"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkProfiles",
            "name": "sqltools-networkProfile",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks','demo-vnet')]"
            ],
            "properties": {
                "containerNetworkInterfaceConfigurations": [
                    {
                        "name": "eth0",
                        "properties": {
                            "ipConfigurations": [
                                {
                                    "name": "ipconfigprofile1",
                                    "properties": {
                                        "subnet": {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'demo-vnet', 'aci-sub')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "name": "sqltools-private",
            "apiVersion": "2019-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkProfiles', 'sqltools-networkProfile')]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "sqltools",
                        "properties": {
                            "image": "mcr.microsoft.com/mssql-tools",
                            "command": [
                                "tail",
                                "-f",
                                "/dev/null"
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 1
                                }
                            },
                            "environmentVariables": [],
                            "ports": [
                                {
                                    "port": "80",
                                    "protocol": "TCP"
                                }
                            ]
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux",
                "ipAddress": {
                    "type": "Private",
                    "ports": [
                        {
                            "port": "80",
                            "protocol": "TCP"
                        }
                    ]
                },
                "networkProfile": {
                    "Id": "[resourceId('Microsoft.Network/networkProfiles', 'sqltools-networkProfile')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('logicAppStorageName')]",
            "apiVersion": "2020-08-01-preview",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "name": "[variables('logicAppName')]",
            "apiVersion": "2019-08-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "EP1",
                "tier": "ElasticPremium"
            },
            "kind": "elastic",
            "properties": {
                "maximumElasticWorkerCount": 20
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('logicAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp,workflowapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('logicAppName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('logicAppName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2019-06-01').keys[0].value,';')]"
                        },
                        {
                            "name": "serviceBus-connectionString",
                            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusName'), 'lappListener'),'2015-08-01').primaryKey]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~12"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "networkConfig",
                    "name": "virtualNetwork",
                    "apiVersion": "2019-08-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('logicAppName'))]"
                    ],
                    "properties": {
                        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'demo-vnet', 'func-sub')]",
                        "isSwift": true
                    }
                }
            ]
        },
        {
            "name": "[variables('registryName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-05-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "adminUserEnabled": true
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "name": "aks-lapp",
            "apiVersion": "2020-09-01",
            "dependsOn": [],
            "location": "[resourceGroup().location]",
            "properties": {
                "kubernetesVersion": "1.18.10",
                "enableRBAC": true,
                "dnsPrefix": "aks-lapp",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": 0,
                        "count": 1,
                        "vmSize": "Standard_B2s",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 110,
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ],
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets','demo-vnet','aks-sub')]"
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "azure",
                    "serviceCidr": "172.16.0.0/24",
                    "dnsServiceIP": "172.16.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": false
                },
                "addonProfiles": {}
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "name": "[concat(variables('registryName'), '/Microsoft.Authorization/', guid(subscription().id, 'acr'))]",
            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'aks-lapp')]"
            ],
            "properties": {
                "principalId": "[reference('aks-lapp', '2020-09-01').identityProfile.kubeletidentity.objectId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "scope": "[resourceId('Microsoft.ContainerRegistry/registries/', variables('registryName'))]"
            }
        },
        {
            "name": "[concat('demo-vnet/aks-sub/Microsoft.Authorization/', guid(subscription().id, 'subnet'))]",
            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
            "apiVersion": "2017-05-01",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[reference('aks-lapp', '2020-09-01').identityProfile.kubeletidentity.objectId]",
                "scope": "[resourceId('Microsoft.Network/virtualNetworks/subnets','demo-vnet','aks-sub')]"
            }
        }
    ],
    "outputs": {
        "serviceBusName": {
            "type": "string",
            "value": "[variables('serviceBusName')]"
        },
        "storageName": {
            "type": "string",
            "value": "[variables('storageName')]"
        },
        "registryName": {
            "type": "string",
            "value": "[variables('registryName')]"
        }
    }
}